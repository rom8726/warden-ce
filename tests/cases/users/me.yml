- name: success get current user info
  fixtures:
    - empty_db
    - admin_user

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: get_current_user
      request:
        method: GET
        path: /api/v1/users/me
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        json: |
          {
            "id": 1,
            "username": "admin",
            "email": "admin@warden.io",
            "is_superuser": true,
            "is_active": true,
            "is_tmp_password": false,
            "two_fa_enabled": false,
            "created_at": "<<PRESENCE>>",
            "last_login": "<<PRESENCE>>",
            "teams": []
          }

- name: get current user without auth
  fixtures:
    - empty_db
    - admin_user

  steps:
    - name: get_current_user_unauthorized
      request:
        method: GET
        path: /api/v1/users/me
        headers:
          Content-Type: application/json
      response:
        status: 401
        json: |
          {
            "error": {
              "message": "unauthorized"
            }
          }

- name: get current user with invalid token
  fixtures:
    - empty_db
    - admin_user

  steps:
    - name: get_current_user_invalid_token
      request:
        method: GET
        path: /api/v1/users/me
        headers:
          Content-Type: application/json
          Authorization: 'Bearer invalid_token'
      response:
        status: 401
        json: |
          {
            "error": {
              "message": "unauthorized"
            }
          }

- name: get current user with regular user
  fixtures:
    - empty_db
    - regular_user

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"user", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: get_current_user
      request:
        method: GET
        path: /api/v1/users/me
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        json: |
          {
            "id": 1,
            "username": "user",
            "email": "user@warden.io",
            "is_superuser": false,
            "is_active": true,
            "is_tmp_password": false,
            "two_fa_enabled": false,
            "created_at": "<<PRESENCE>>",
            "last_login": "<<PRESENCE>>",
            "teams": []
          }

#- name: get current user with team membership
#  fixtures:
#    - empty_db
#    - user_with_team
#
#  steps:
#    - name: auth
#      request:
#        method: POST
#        path: /api/v1/auth/login
#        headers:
#          Content-Type: application/json
#        body: {"username":"user", "password":"WardenQwe321!"}
#      response:
#        status: 200
#        headers:
#          Content-Type: application/json
#    - name: get_current_user
#      request:
#        method: GET
#        path: /api/v1/users/me
#        headers:
#          Content-Type: application/json
#          Authorization: 'Bearer {{auth.response.access_token}}'
#      response:
#        status: 200
#        json: |
#          {
#            "id": 1,
#            "username": "user",
#            "email": "user@warden.io",
#            "is_superuser": false,
#            "is_active": true,
#            "is_tmp_password": false,
#            "two_fa_enabled": false,
#            "created_at": "<<PRESENCE>>",
#            "last_login": "<<PRESENCE>>",
#            "teams": [
#              {
#                "id": 1,
#                "name": "developers",
#                "role": "member"
#              }
#            ]
#          }
