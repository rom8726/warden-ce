- name: success create team
  fixtures:
    - empty_db
    - admin_user

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: create_team
      request:
        method: POST
        path: /api/v1/teams
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: {"name":"New Team"}
      response:
        status: 201
        json: |
          {
            "team": {
              "id": 2,
              "name": "New Team",
              "created_at": "<<PRESENCE>>",
              "members": [{"role":"owner","user_id":1}]
            }
          }
      dbChecks:
        - query: SELECT COUNT(*) AS cnt FROM teams
          result:
            - cnt: 1
        - query: SELECT name FROM teams WHERE name = 'New Team'
          result:
            - name: "New Team"
        - query: SELECT COUNT(*) AS cnt FROM team_members WHERE team_id = 2 AND user_id = 1 AND role = 'owner'
          result:
            - cnt: 1

- name: create team without auth
  fixtures:
    - empty_db
    - admin_user

  steps:
    - name: create_team_unauthorized
      request:
        method: POST
        path: /api/v1/teams
        headers:
          Content-Type: application/json
        body: {"name":"New Team"}
      response:
        status: 401
        json: |
          {
            "error": {
              "message": "unauthorized"
            }
          }
      dbChecks:
        - query: SELECT COUNT(*) AS cnt FROM teams
          result:
            - cnt: 0
        - query: SELECT name FROM teams WHERE name = 'New Team'
          result: []

- name: create team with short name
  fixtures:
    - empty_db
    - admin_user

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: create_team_short_name
      request:
        method: POST
        path: /api/v1/teams
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: {"name":"A"}
      response:
        status: 400
      dbChecks:
        - query: SELECT COUNT(*) AS cnt FROM teams
          result:
            - cnt: 0
        - query: SELECT name FROM teams WHERE name = 'A'
          result: []

- name: create team with duplicate name
  fixtures:
    - empty_db
    - single_team

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: create_team_duplicate_name
      request:
        method: POST
        path: /api/v1/teams
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: {"name":"developers"}
      response:
        status: 400
        json: |
          {
            "error": {
              "message": "team name already in use"
            }
          }
      dbChecks:
        - query: SELECT COUNT(*) AS cnt FROM teams
          result:
            - cnt: 1
        - query: SELECT name FROM teams WHERE name = 'developers'
          result:
            - name: "developers"

- name: create team with missing name
  fixtures:
    - empty_db
    - admin_user

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: create_team_missing_name
      request:
        method: POST
        path: /api/v1/teams
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: {}
      response:
        status: 400

- name: create team with empty name
  fixtures:
    - empty_db
    - admin_user

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: create_team_empty_name
      request:
        method: POST
        path: /api/v1/teams
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: {"name":""}
      response:
        status: 400

- name: create team with malformed JSON
  fixtures:
    - empty_db
    - admin_user

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: create_team_malformed_json
      request:
        method: POST
        path: /api/v1/teams
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: '{"name":"New Team"'
      response:
        status: 400 