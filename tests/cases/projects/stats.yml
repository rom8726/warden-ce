- name: success get project stats
  fixtures:
    - empty_db
    - project_with_issues

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: get_project_stats
      request:
        method: GET
        path: /api/v1/projects/1/stats?period=7d
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        json: |
          {
            "total_issues": 3,
            "issues_by_level": {
              "fatal": 0,
              "exception": 0,
              "error": 2,
              "warning": 1,
              "info": 0,
              "debug": 0
            },
            "most_frequent_issues": [
              {
                "id": 1,
                "project_id": 1,
                "title": "TypeError: Cannot read property of undefined",
                "level": "error",
                "count": 15,
                "last_seen": "<<PRESENCE>>"
              },
              {
                "id": 2,
                "project_id": 1,
                "title": "ReferenceError: variable is not defined",
                "level": "error",
                "count": 8,
                "last_seen": "<<PRESENCE>>"
              },
              {
                "id": 3,
                "project_id": 1,
                "title": "Warning: Deprecated function used",
                "level": "warning",
                "count": 3,
                "last_seen": "<<PRESENCE>>"
              }
            ]
          }

- name: get project stats without auth
  fixtures:
    - empty_db
    - project_with_issues

  steps:
    - name: get_project_stats_unauthorized
      request:
        method: GET
        path: /api/v1/projects/1/stats?period=7d
        headers:
          Content-Type: application/json
      response:
        status: 401
        json: |
          {
            "error": {
              "message": "unauthorized"
            }
          }

- name: get project stats for non-existent project
  fixtures:
    - empty_db
    - project_with_issues

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: get_project_stats_not_found
      request:
        method: GET
        path: /api/v1/projects/999/stats?period=7d
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 404
        json: |
          {
            "error": {
              "message": "entity not found"
            }
          }

- name: get project stats without permission
  fixtures:
    - empty_db
    - project_with_issues

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"dev4", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: get_project_stats_no_permission
      request:
        method: GET
        path: /api/v1/projects/1/stats?period=7d
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 403
        json: |
          {
            "error": {
              "message": "permission denied"
            }
          }

- name: get project stats with different periods
  fixtures:
    - empty_db
    - project_with_issues

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: get_project_stats_24h
      request:
        method: GET
        path: /api/v1/projects/1/stats?period=24h
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        json: |
          {
            "total_issues": 3,
            "issues_by_level": {
              "fatal": 0,
              "exception": 0,
              "error": 2,
              "warning": 1,
              "info": 0,
              "debug": 0
            },
            "most_frequent_issues": "<<PRESENCE>>"
          }
    - name: get_project_stats_30d
      request:
        method: GET
        path: /api/v1/projects/1/stats?period=30d
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        json: |
          {
            "total_issues": 3,
            "issues_by_level": {
              "fatal": 0,
              "exception": 0,
              "error": 2,
              "warning": 1,
              "info": 0,
              "debug": 0
            },
            "most_frequent_issues": "<<PRESENCE>>"
          }

- name: get project stats for project without issues
  fixtures:
    - empty_db
    - project_with_team

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: get_project_stats_empty
      request:
        method: GET
        path: /api/v1/projects/1/stats?period=7d
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 200
        json: |
          {
            "total_issues": 0,
            "issues_by_level": {
              "fatal": 0,
              "exception": 0,
              "error": 0,
              "warning": 0,
              "info": 0,
              "debug": 0
            },
            "most_frequent_issues": []
          }
