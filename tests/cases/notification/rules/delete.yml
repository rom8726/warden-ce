- name: success delete notification rule
  fixtures:
    - empty_db
    - project_with_notification_rules

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: delete_notification_rule
      request:
        method: DELETE
        path: /api/v1/projects/1/notification-settings/1/rules/1
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 204
      dbChecks:
        - query: SELECT COUNT(*) AS cnt FROM notification_rules
          result:
            - cnt: 1
        - query: SELECT id FROM notification_rules WHERE id = 1
          result: []

- name: delete notification rule without auth
  fixtures:
    - empty_db
    - project_with_notification_rules

  steps:
    - name: delete_notification_rule_unauthorized
      request:
        method: DELETE
        path: /api/v1/projects/1/notification-settings/1/rules/1
        headers:
          Content-Type: application/json
      response:
        status: 401
        json: |
          {
            "error": {
              "message": "unauthorized"
            }
          }

- name: delete non-existent notification rule
  fixtures:
    - empty_db
    - project_with_notification_settings

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: delete_nonexistent_notification_rule
      request:
        method: DELETE
        path: /api/v1/projects/1/notification-settings/1/rules/999
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 404
        json: |
          {
            "error": {
              "message": "get notification rule: entity not found"
            }
          }

- name: delete notification rule for non-existent project
  fixtures:
    - empty_db
    - admin_user

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: delete_notification_rule_nonexistent_project
      request:
        method: DELETE
        path: /api/v1/projects/999/notification-settings/1/rules/1
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 404
        json: |
          {
            "error": {
              "message": "entity not found"
            }
          }

- name: delete notification rule for non-existent setting
  fixtures:
    - empty_db
    - project_without_team

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: delete_notification_rule_nonexistent_setting
      request:
        method: DELETE
        path: /api/v1/projects/1/notification-settings/999/rules/1
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 404
        json: |
          {
            "error": {
              "message": "get notification rule: entity not found"
            }
          }

- name: delete notification rule with invalid project_id
  fixtures:
    - empty_db
    - admin_user

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: delete_notification_rule_invalid_project_id
      request:
        method: DELETE
        path: /api/v1/projects/invalid/notification-settings/1/rules/1
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 400

- name: delete notification rule with invalid setting_id
  fixtures:
    - empty_db
    - project_without_team

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: delete_notification_rule_invalid_setting_id
      request:
        method: DELETE
        path: /api/v1/projects/1/notification-settings/invalid/rules/1
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 400

- name: delete notification rule with invalid rule_id
  fixtures:
    - empty_db
    - project_without_team

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: delete_notification_rule_invalid_rule_id
      request:
        method: DELETE
        path: /api/v1/projects/1/notification-settings/1/rules/invalid
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
      response:
        status: 400 