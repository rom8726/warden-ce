- name: success create notification rule
  fixtures:
    - empty_db
    - project_with_notification_settings

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: create_notification_rule
      request:
        method: POST
        path: /api/v1/projects/1/notification-settings/1/rules
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: {"event_level":"error", "is_new_error":true, "is_regression":false}
      response:
        status: 201
        json: |
          {
            "id": 1,
            "notification_setting_id": 1,
            "event_level": "error",
            "is_new_error": true,
            "is_regression": false,
            "created_at": "<<PRESENCE>>"
          }
      dbChecks:
        - query: SELECT COUNT(*) AS cnt FROM notification_rules
          result:
            - cnt: 1
        - query: SELECT event_level, is_new_error, is_regression FROM notification_rules WHERE id = 1
          result:
            - event_level: "error"
              is_new_error: true
              is_regression: false

- name: create notification rule without auth
  fixtures:
    - empty_db
    - project_with_notification_settings

  steps:
    - name: create_notification_rule_unauthorized
      request:
        method: POST
        path: /api/v1/projects/1/notification-settings/1/rules
        headers:
          Content-Type: application/json
        body: {"event_level":"error", "is_new_error":true, "is_regression":false}
      response:
        status: 401
        json: |
          {
            "error": {
              "message": "unauthorized"
            }
          }

- name: create notification rule for non-existent project
  fixtures:
    - empty_db
    - admin_user

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: create_notification_rule_nonexistent_project
      request:
        method: POST
        path: /api/v1/projects/999/notification-settings/1/rules
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: {"event_level":"error", "is_new_error":true, "is_regression":false}
      response:
        status: 404
        json: |
          {
            "error": {
              "message": "entity not found"
            }
          }

- name: create notification rule for non-existent setting
  fixtures:
    - empty_db
    - project_without_team

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: create_notification_rule_nonexistent_setting
      request:
        method: POST
        path: /api/v1/projects/1/notification-settings/999/rules
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: {"event_level":"error", "is_new_error":true, "is_regression":false}
      response:
        status: 404
        json: |
          {
            "error": {
              "message": "get notification setting: entity not found"
            }
          }

- name: create notification rule with invalid project_id
  fixtures:
    - empty_db
    - admin_user

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: create_notification_rule_invalid_project_id
      request:
        method: POST
        path: /api/v1/projects/invalid/notification-settings/1/rules
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: {"event_level":"error", "is_new_error":true, "is_regression":false}
      response:
        status: 400

- name: create notification rule with invalid setting_id
  fixtures:
    - empty_db
    - project_without_team

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: create_notification_rule_invalid_setting_id
      request:
        method: POST
        path: /api/v1/projects/1/notification-settings/invalid/rules
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: {"event_level":"error", "is_new_error":true, "is_regression":false}
      response:
        status: 400

- name: create notification rule with different parameters
  fixtures:
    - empty_db
    - project_with_notification_settings

  steps:
    - name: auth
      request:
        method: POST
        path: /api/v1/auth/login
        headers:
          Content-Type: application/json
        body: {"username":"admin", "password":"WardenQwe321!"}
      response:
        status: 200
        headers:
          Content-Type: application/json
    - name: create_rule_with_fingerprint
      request:
        method: POST
        path: /api/v1/projects/1/notification-settings/1/rules
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: {"event_level":"warning", "fingerprint":"54d8a9e1ba944f508464b4c0f6dd3320", "is_regression":true}
      response:
        status: 201
    - name: create_rule_with_only_level
      request:
        method: POST
        path: /api/v1/projects/1/notification-settings/1/rules
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: {"event_level":"info"}
      response:
        status: 201
    - name: create_rule_with_empty_body
      request:
        method: POST
        path: /api/v1/projects/1/notification-settings/1/rules
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{auth.response.access_token}}'
        body: {}
      response:
        status: 201 